<?php
{% block phpdoc_header %}
{% endblock phpdoc_header %}

namespace {{ namespace }}\Model;
{% if uses is not empty %}

{% for use in uses %}
use {{ use }};
{% endfor %}
{% endif %}

{% block phpdoc_author %}
{% endblock phpdoc_author %}
class {{ model_name }} implements {{ model_name }}Interface
{
{% block class_body %}
{% for field in fields %}

    /**
     * @var {{ field.type }}
     */
    protected ${{ field.name }};
{% endfor %}
{% for field in fields %}

    /**
     * {@inheritdoc}
     */
    public function set{{ field.methodName }}({% if field.is_argument_type %}{{ field.type }} {% endif %}${{ field.name }})
    {
        $this->{{ field.name }} = ${{ field.name }};

        return $this;
    }

    /**
     * {@inheritdoc}
     */
    public function {% if field.type == 'bool' %}is{% else %}get{% endif %}{{ field.methodName }}()
    {
        return $this->{{ field.name }};
    }
{% if field.type == 'array' %}

    /**
     * {@inheritdoc}
     */
    public function add{{ field.methodName }}({% if field.is_argument_type %}{{ field.type }} {% endif %}${{ field.name }})
    {
        $this->{{ field.name }}[] = ${{ field.name }};
    }

    /**
     * {@inheritdoc}
     */
    public function remove{{ field.methodName }}({% if field.is_argument_type %}{{ field.type }} {% endif %}${{ field.name }})
    {
        // TODO: Implement remove{{ field.methodName }}() method.
    }
{% endif %}
{% endfor %}
{% endblock class_body %}
}
